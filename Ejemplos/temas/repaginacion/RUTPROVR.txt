      ******************************************************************
      *     I D E N T I F I C A T I O N        D I V I S I O N
      ******************************************************************
      *
       IDENTIFICATION DIVISION.
      *
      ******************************************************************
      * DESCRIPCION DEL PGM: PGM QUE A PARTIR DEL FICHERO DE ENTRADA
      * DE SOCIOS, GENERA DOS FICHEROS DE SALIDA, CON LA INFORMACION
      * DE LOS SOCIOS VIP (FICHERO 1) Y LA INFORMACION DE LOS SOCIOS
      * NO VIP (FICHERO 2).
      ******************************************************************
      *
       PROGRAM-ID. RUTPROVR.
       AUTHOR. SERGIO POVEDA.
       INSTALLATION. SANTANDER UK.
       DATE-WRITTEN. 12/06/2023.
       DATE-COMPILED. 12/06/2023.
      *
      ******************************************************************
      *
      *   E N V I R O N M E N T              D I V I S I O N
      *   ---------------------              ---------------
      *
      * DEFINIR LOS FICHEROS DE ENTRADA Y SALIDA QUE VAN A SER USADOS
      * DENTRO DEL PGM COBOL. RELACIONAR LOS NOMBRES LOGICOS DE LOS
      * FICHEROS EN EL PGRAMA CON NOMBRES DE LOS FICHEROS DE LOS JCLS.
      * DOS SECCIONES:
      *     - CONFIGURATION SECTION
      *       DEFINIR EL NOMBRE DE LOS PROCESADORES DONDE SE COMPILA Y
      *       EJECUTA EL PGM (NO ES OBLIGATORIO).
      *     - INPUT-OUTPUT SECTION
      *       DEFINIR LOS DISPOSITIVOS PERIFERICOS (IMPRESORAS, ETC)
      *       SE DEFINEN TAMBIEN LOS FICHEROS DE E/S QUE SE USARAN EN EL
      *       PRGRAMA.
      ******************************************************************
      *
       ENVIRONMENT DIVISION.
      *
       CONFIGURATION SECTION.
         SOURCE-COMPUTER. IBM-3090.
         OBJECT-COMPUTER. IBM-3090.
      *
       SPECIAL-NAMES.
           DECIMAL-POINT IS COMMA.
      *
       INPUT-OUTPUT SECTION.
      *
      ******************************************************************
      *   D A T A                D I V I S I O N
      *   --------------------------------------
      *
      * IDENTIFICA LOS NOMBRES DE DATOS UTILIZADOS EN EL PGM.
      * CONTIENE 3 SECCIONES:
      *      - FILE SECTION.
      *        DESCRIBIR LOS FICHEROS DE ENTRADA Y SALIDA QUE SE USAN
      *        EN EL PGM COBOL.
      *      - WORKING STORAGE SECTION.
      *        DEFINIR LOS CAMPOS DE TRABAJO NECESARIOS PARA EL PGM.
      *        (VARIABLES, CONSTANTES, ACUMULADORES, CONTADORES,
      *         SWITHCHES, COPYS, DCLGENS, TABLAS INTERNAS, CURSORES...
      *      - LINKAGE SECTION.
      *        SE USARA CUANDO EL PGM SEA DE TIPO RUTINA, YA QUE ES LA
      *        ZONA QUE SIRVE COMO COMUNICACION CON EL PGM QUE LO INVOCA
      ******************************************************************
      *
       DATA DIVISION.
      *
       FILE SECTION.
      *
      ******************************************************************
      *   F I L E       S E C T I O N
      ******************************************************************
      *
      *
      ******************************************************************
      *   W O R K I N G       S T O R A G E      S E C T I O N
      ******************************************************************
      *
       WORKING-STORAGE SECTION.
      *
       01 CA-CONSTANTES.
          05 CA-L                              PIC X(01) VALUE 'L'.
          05 CA-R                              PIC X(01) VALUE 'R'.
          05 CA-S                              PIC X(01) VALUE 'S'.
          05 CA-N                              PIC X(01) VALUE 'N'.
      *
       01 CN-CONSTANTES.
          05 CN-0                              PIC 9(01) VALUE 0.
          05 CN-3                              PIC 9(01) VALUE 3.
          05 CN-100                            PIC 9(03) VALUE 100.
      *
       01 CN-CONTADORES.
          05 CONT-LEIDOS                       PIC 9(03).
      *
       01 SW-SWITCHES.
          05 SW-FIN-CURSOR                     PIC X(01).
             88 SI-FIN-CURSOR                  VALUE 'S'.
             88 NO-FIN-CURSOR                  VALUE 'N'.
      *
      *
      *
           EXEC SQL
               INCLUDE SQLCA
           END-EXEC.
      *
           EXEC SQL
               INCLUDE TBPROVIN
           END-EXEC.
      ******************************************************************
      *------------------------CURSOR DE LISTA--------------------------
           EXEC SQL
              DECLARE CURSOR-LIST-PROVIN CURSOR FOR
                SELECT PREFIJO
                      ,PROVINCIA
                  FROM PROVINCIAS
                ORDER BY PROVINCIA
           END-EXEC.
      *----CURSOR DE REPAGINACION 1-------------------------------------
      *
           EXEC SQL
              DECLARE CURSOR-REPAG-PROVIN CURSOR FOR
                SELECT  PREFIJO
                       ,PROVINCIA
                  FROM PROVINCIAS
                 WHERE PROVINCIA > :TB-PROVINCIA
                 ORDER BY PROVINCIA
           END-EXEC.
      *
       LINKAGE SECTION.
       COPY CPYPROVR.
      *
      *
      ******************************************************************
      *   P R O C E D U R E             D I V I S I O N
      ******************************************************************
      *
       PROCEDURE DIVISION USING CPY-RUT-PROVIN.
      *
           PERFORM 1000-INICIO
              THRU 1000-INICIO-EXIT
      *
           PERFORM 2000-PROCESO
              THRU 2000-PROCESO-EXIT

           PERFORM 3000-FIN
              THRU 3000-FIN-EXIT
      *
           .
      *
      ******************************************************************
      * 1000-INICIO
      ******************************************************************
      *
       1000-INICIO.
      *
           INITIALIZE CN-CONTADORES
                      DCLPROVINCIAS
                      SALIDA-RUT
                      ERRORES-RUT
      *
           MOVE '00' TO COD-RETORNO
           MOVE '00' TO COD-SUBRETORNO
           MOVE CA-S TO MAS-DATOS
      *
           PERFORM 1100-VALIDAR-CAMPOS-ENT
              THRU 1100-VALIDAR-CAMPOS-ENT-EXIT
      *
           .
      *
       1000-INICIO-EXIT.
           EXIT.
      *
      ******************************************************************
      * 1100-VALIDAR-CAMPOS-ENT
      ******************************************************************
      *
       1100-VALIDAR-CAMPOS-ENT.
      *
           IF OPCION = SPACES OR LOW-VALUES
              MOVE '88'         TO COD-RETORNO
              MOVE '01'         TO COD-SUBRETORNO
              MOVE '1100-VALIDAR-CAMPOS-ENT' TO PARRAFO
              MOVE 'CAMPO OPCION SIN INFORMAR' TO DESCRIPCION
              MOVE 'OPCION'     TO TABLA
      *
              PERFORM 3000-FIN
                 THRU 3000-FIN-EXIT
           END-IF
      *
           IF NUM-OCCURS-E = CN-0 OR NUM-OCCURS-E > 3
              MOVE '88'         TO COD-RETORNO
              MOVE '02'         TO COD-SUBRETORNO
              MOVE '1100-VALIDAR-CAMPOS-ENT' TO PARRAFO
              MOVE 'CAMPO NUM-OCCURS-E CON VALOR INVALIDO'
                                 TO DESCRIPCION
              MOVE 'NUM-OCCURS-E' TO TABLA
      *
              PERFORM 3000-FIN
                 THRU 3000-FIN-EXIT
           END-IF
      *
           .
      *
       1100-VALIDAR-CAMPOS-ENT-EXIT.
           EXIT.
      *
      ******************************************************************
      * 2000-PROCESO
      ******************************************************************
      *
       2000-PROCESO.
      *
           EVALUATE OPCION
               WHEN CA-L
                    PERFORM 2100-ABRIR-CURSOR-LISTA
                       THRU 2100-ABRIR-CURSOR-LISTA-EXIT
      *
                    PERFORM 2200-LEER-CURSOR-LISTA
                       THRU 2200-LEER-CURSOR-LISTA-EXIT
                      UNTIL CONT-LEIDOS > NUM-OCCURS-E
                         OR SI-FIN-CURSOR
      *
                    PERFORM 2300-CERRAR-CURSOR-LISTA
                       THRU 2300-CERRAR-CURSOR-LISTA-EXIT
      *
               WHEN CA-R
                    MOVE PREFIJO-REPAG        TO TB-PREFIJO
                    MOVE PROVINCIA-REPAG      TO TB-PROVINCIA
      *
                    PERFORM 2400-ABRIR-CURSOR-REPAG
                       THRU 2400-ABRIR-CURSOR-REPAG-EXIT
      *
                    PERFORM 2500-LEER-CURSOR-REPAG
                       THRU 2500-LEER-CURSOR-REPAG-EXIT
                      UNTIL CONT-LEIDOS  > NUM-OCCURS-E
                         OR SI-FIN-CURSOR
      *
                    PERFORM 2600-CERRAR-CURSOR-REPAG
                       THRU 2600-CERRAR-CURSOR-REPAG-EXIT
      *
      *
             WHEN OTHER
                  MOVE '88'            TO COD-RETORNO
                  MOVE '03'            TO COD-SUBRETORNO
                  MOVE '2000-PROCESO' TO PARRAFO
                  MOVE 'CAMPO OPCION SIN INVALIDO' TO DESCRIPCION
                  MOVE 'OPCION' TO TABLA
      *
                  PERFORM 3000-FIN
                     THRU 3000-FIN-EXIT
           END-EVALUATE
      *
           .
      *
       2000-PROCESO-EXIT.
           EXIT.
      *
      ******************************************************************
      * 2100-ABRIR-CURSOR-LISTA
      ******************************************************************
      *
       2100-ABRIR-CURSOR-LISTA.
      *
           SET NO-FIN-CURSOR TO TRUE
      *
           EXEC SQL
              OPEN CURSOR-LIST-PROVIN
           END-EXEC.
      *
           EVALUATE SQLCODE
               WHEN CN-0
                    CONTINUE
               WHEN OTHER
                    MOVE '99'               TO COD-RETORNO
                    MOVE '99'               TO COD-SUBRETORNO
                    MOVE '2100-ABRIR-CURSOR-LISTA'
                                            TO PARRAFO
                    MOVE 'ERROR AL ABRIR CURSOR LISTA'
                                            TO DESCRIPCION
                    MOVE 'DIRECCIONES'      TO TABLA
                    MOVE SQLCODE            TO SQLCODE-RUT
      *
                    PERFORM 3000-FIN
                       THRU 3000-FIN-EXIT
           END-EVALUATE
      *
           .
      *
       2100-ABRIR-CURSOR-LISTA-EXIT.
           EXIT.
      *
      ******************************************************************
      * 2200-LEER-CURSOR-LISTA
      ******************************************************************
      *
       2200-LEER-CURSOR-LISTA.
      *
           EXEC SQL
              FETCH CURSOR-LIST-PROVIN
                INTO :TB-PREFIJO
                    ,:TB-PROVINCIA
           END-EXEC.
      *
           EVALUATE SQLCODE
               WHEN CN-0
                    ADD 1 TO CONT-LEIDOS
                    IF CONT-LEIDOS <= NUM-OCCURS-E
                       PERFORM 9000-INFORMAR-SALIDA
                          THRU 9000-INFORMAR-SALIDA-EXIT
                    END-IF

               WHEN CN-100
                    SET SI-FIN-CURSOR       TO TRUE
                    MOVE CA-N               TO MAS-DATOS
               WHEN OTHER
                    MOVE '99'               TO COD-RETORNO
                    MOVE '99'               TO COD-SUBRETORNO
                    MOVE '2200-LEER-CURSOR-LISTA'
                                            TO PARRAFO
                    MOVE 'ERROR AL LEER CURSOR LISTA'
                                            TO DESCRIPCION
                    MOVE 'DIRECCIONES'      TO TABLA
                    MOVE SQLCODE            TO SQLCODE-RUT
      *
                    PERFORM 3000-FIN
                       THRU 3000-FIN-EXIT
      *
           END-EVALUATE
      *
           .
      *
       2200-LEER-CURSOR-LISTA-EXIT.
           EXIT.
      *
      ******************************************************************
      * 2300-CERRAR-CURSOR-LISTA
      ******************************************************************
      *
       2300-CERRAR-CURSOR-LISTA.
      *
           EXEC SQL
              CLOSE CURSOR-LIST-PROVIN
           END-EXEC.
      *
           EVALUATE SQLCODE
               WHEN CN-0
                    CONTINUE
               WHEN OTHER
                    MOVE '99'               TO COD-RETORNO
                    MOVE '99'               TO COD-SUBRETORNO
                    MOVE '2300-CERRAR-CURSOR-LISTA'
                                            TO PARRAFO
                    MOVE 'ERROR AL CERRAR CURSOR LISTA'
                                            TO DESCRIPCION
                    MOVE 'DIRECCIONES'      TO TABLA
                    MOVE SQLCODE            TO SQLCODE-RUT
      *
                    PERFORM 3000-FIN
                       THRU 3000-FIN-EXIT
           END-EVALUATE
      *
           .
      *
       2300-CERRAR-CURSOR-LISTA-EXIT.
           EXIT.
      *
      ******************************************************************
      * 2400-ABRIR-CURSOR-REPAG
      ******************************************************************
      *
       2400-ABRIR-CURSOR-REPAG.
      *
           SET NO-FIN-CURSOR TO TRUE
      *
           EXEC SQL
              OPEN CURSOR-REPAG-PROVIN
           END-EXEC.
      *
           EVALUATE SQLCODE
               WHEN CN-0
                    CONTINUE
               WHEN OTHER
                    MOVE '99'               TO COD-RETORNO
                    MOVE '99'               TO COD-SUBRETORNO
                    MOVE '2400-ABRIR-CURSOR-REPAG'
                                            TO PARRAFO
                    MOVE 'ERROR AL ABRIR CURSOR REPAG'
                                            TO DESCRIPCION
                    MOVE 'PROVINCIAS'       TO TABLA
                    MOVE SQLCODE            TO SQLCODE-RUT
      *
                    PERFORM 3000-FIN
                       THRU 3000-FIN-EXIT
           END-EVALUATE
      *
           .
      *
       2400-ABRIR-CURSOR-REPAG-EXIT.
           EXIT.
      *
      ******************************************************************
      * 2500-LEER-CURSOR-REPAG
      ******************************************************************
      *
       2500-LEER-CURSOR-REPAG.
      *
           EXEC SQL
              FETCH CURSOR-REPAG-PROVIN
                INTO :TB-PREFIJO
                    ,:TB-PROVINCIA
           END-EXEC.
      *
           EVALUATE SQLCODE
               WHEN CN-0
                    ADD 1 TO CONT-LEIDOS
                    IF CONT-LEIDOS <= NUM-OCCURS-E
                       PERFORM 9000-INFORMAR-SALIDA
                          THRU 9000-INFORMAR-SALIDA-EXIT
                    END-IF

               WHEN CN-100
                    SET SI-FIN-CURSOR       TO TRUE
                    MOVE CA-N               TO MAS-DATOS
               WHEN OTHER
                    MOVE '99'               TO COD-RETORNO
                    MOVE '99'               TO COD-SUBRETORNO
                    MOVE '2500-LEER-CURSOR-REPAG'
                                            TO PARRAFO
                    MOVE 'ERROR AL LEER CURSOR REPAG'
                                            TO DESCRIPCION
                    MOVE 'PROVINCIAS'       TO TABLA
                    MOVE SQLCODE            TO SQLCODE-RUT
      *
                    PERFORM 3000-FIN
                       THRU 3000-FIN-EXIT
      *
           END-EVALUATE
      *
           .
      *
       2500-LEER-CURSOR-REPAG-EXIT.
           EXIT.
      *
      ******************************************************************
      * 2600-CERRAR-CURSOR-REPAG
      ******************************************************************
      *
       2600-CERRAR-CURSOR-REPAG.
      *
           EXEC SQL
              CLOSE CURSOR-REPAG-PROVIN
           END-EXEC.
      *
           EVALUATE SQLCODE
               WHEN CN-0
                    CONTINUE
               WHEN OTHER
                    MOVE '99'               TO COD-RETORNO
                    MOVE '99'               TO COD-SUBRETORNO
                    MOVE '2600-CERRAR-CURSOR-REPAG'
                                            TO PARRAFO
                    MOVE 'ERROR AL CERRAR CURSOR REPAG'
                                            TO DESCRIPCION
                    MOVE 'PROVINCIAS'       TO TABLA
                    MOVE SQLCODE            TO SQLCODE-RUT
      *
                    PERFORM 3000-FIN
                       THRU 3000-FIN-EXIT
           END-EVALUATE
      *
           .
      *
       2600-CERRAR-CURSOR-REPAG-EXIT.
           EXIT.
      *
      *****************************************************************
      * 9000-INFORMAR-SALIDA
      *****************************************************************
      *
       9000-INFORMAR-SALIDA.
      *
           MOVE TB-PREFIJO             TO PREFIJO(CONT-LEIDOS)
                                          PREFIJO-REPAG
           MOVE TB-PROVINCIA           TO PROVINCIA(CONT-LEIDOS)
                                          PROVINCIA-REPAG
      *
           ADD 1                       TO NUM-OCCURS-S
      *
           .
      *
       9000-INFORMAR-SALIDA-EXIT.
           EXIT.
      *
      *****************************************************************
      * 3000-FIN
      *****************************************************************
      *
       3000-FIN.
      *
           GOBACK
      *
           .
      *
       3000-FIN-EXIT.
           EXIT.
      *
